stages:
  - lint
  - build
  - deploy

golang linter:
  variables:
    GOLANGCI_LINT_URL:  https://gitlab.com/mts-teta-public/devops-tools/-/raw/master/.golangci.yml
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:golangci-lint-alpine
  stage: lint
  allow_failure: true
  script:
    - wget -O .golangci.yml $GOLANGCI_LINT_URL
    - cat .golangci.yml
    # - '[ -e .golangci.yml ] || cp /golangci/.golangci.yml .'
    - GOOS=linux GOARCH=amd64 golangci-lint run --issues-exit-code 0 --out-format code-climate | tee gl-code-quality-report.json | jq -r '.[] | "\(.location.path):\(.location.lines.begin) \(.description)"'
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths:
      - gl-code-quality-report.json
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
      when: always


build image:
  variables:
    CONTEXT: $CI_PROJECT_DIR
    DOCKERFILE: $CI_PROJECT_DIR/Dockerfile

  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: build
  allow_failure: false
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CONTEXT --dockerfile $DOCKERFILE --destination ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME} --cache=false --compressed-caching=false
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
      when: always

deploy:
  variables:
    ROLLOUT_TIMEOUT: 180s
    K8S_WORKLOAD_TYPE: deployment
    K8S_WORKLOAD_NAME: $CI_PROJECT_NAME
    HELM_TEMPLATE: https://gitlab.com/mts-teta-public/devops-tools/-/raw/master/main-0.1.0.tgz

  stage: deploy
  needs: [ "build image" ]
  image: dtzar/helm-kubectl:3.7.2
  script:
    - export K8S_NS=$(echo $CI_PROJECT_NAMESPACE | sed 's|.*/||' )
    - echo "Project namespace $K8S_NS"
    - helm template ${CI_PROJECT_NAME} $HELM_TEMPLATE --namespace ${K8S_NS} --set image=${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME} --set applicationName=${K8S_WORKLOAD_NAME} > manifests.yaml
    - cat manifests.yaml
    - kubectl diff -n ${K8S_NS} -f manifests.yaml || echo "diff"
    - kubectl apply -n ${K8S_NS} -f manifests.yaml
    - kubectl set env ${K8S_WORKLOAD_TYPE} ${K8S_WORKLOAD_NAME} -n ${K8S_NS} COMMIT_SHA=${CI_COMMIT_SHA} REF_NAME=${CI_COMMIT_REF_NAME} DEPLOY_DATE=$(date -u +%d.%m.%Y_%H:%M:%S)
    - kubectl rollout status ${K8S_WORKLOAD_TYPE} ${K8S_WORKLOAD_NAME} -n ${K8S_NS} --timeout=${ROLLOUT_TIMEOUT}
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
      when: always
